
buildscript {
    ext {
        kotlinVersion = "1.6.10"
        kotlinCoroutinesVersion = "1.6.0"
        kotlinGradlePluginVersion = "1.6.10"

        kotlinterGradleVersion = "3.8.0"
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinGradlePluginVersion"
        classpath "org.jmailen.gradle:kotlinter-gradle:$kotlinterGradleVersion"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "$kotlinVersion" apply false
}

allprojects {
    group = 'io.pleo'
}

subprojects {
    ext {
        junitVersion = "5.8.2"
        kotlinGuiceVersion = "1.6.0"
        kotlinReflectVersion = "1.6.10"
        mockkVersion = "1.12.2"
    }

    apply plugin: 'java-library'
    apply plugin: "kotlin"
    apply plugin: 'maven-publish'
    apply plugin: "org.jmailen.kotlinter"

    sourceCompatibility = 11
    targetCompatibility = 11

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            jvmTarget = "11"
            javaParameters = true
            languageVersion = "1.6"
        }
    }

    dependencies {
        implementation 'org.slf4j:slf4j-api:1.7.35'
        implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinReflectVersion"
        implementation "dev.misfitlabs.kotlinguice4:kotlin-guice:$kotlinGuiceVersion"

        testImplementation 'com.google.truth:truth:1.1.3'
        testImplementation 'ch.qos.logback:logback-classic:1.2.10'
        testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
        testImplementation "io.mockk:mockk:$mockkVersion"

        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        classifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        classifier = 'javadoc'
    }

    javadoc {
        if(JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    test {
        useJUnitPlatform()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = project.name
                    description = "Dynamic properties for your Java/Kotlin app"
                    url = 'http://github.com/pleo-io/prop'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'http://www.opensource.org/licenses/mit-license.php'
                        }
                    }
                    developers {
                        developer {
                            name = 'Pleo'
                            email = 'dev@pleo.io'
                        }
                    }
                    scm {
                        connection = 'scm:git:git@github.com:pleo-io/prop.git'
                        developerConnection = 'scm:git:git@github.com:pleo-io/prop.git'
                        url = 'https://github.com/pleo-io/prop'
                    }
                }
            }
        }

        repositories {
            mavenLocal()
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/pleo-io/prop")
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}
