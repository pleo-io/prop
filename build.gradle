
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath(libs.kotlin.gradle.plugin)
        classpath(libs.kotlinter.gradle)
    }
}

plugins {
    alias(libs.plugins.kotlin.jvm) apply false
}

allprojects {
    group = 'io.pleo'
}

subprojects {
    apply plugin: libs.plugins.java.library.get().pluginId
    apply plugin: libs.plugins.kotlin.library.get().pluginId
    apply plugin: libs.plugins.maven.publish.get().pluginId
    apply plugin: libs.plugins.jmailen.kotlinter.get().pluginId

    sourceCompatibility = 17
    targetCompatibility = 17

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
        kotlinOptions {
            jvmTarget = "17"
            javaParameters = true
            languageVersion = "1.6"
        }
    }

    dependencies {
        implementation(libs.slf4j)
        implementation(libs.kotlin.reflect)
        implementation(libs.kotlin.guice)

        testImplementation(libs.google.truth)
        testImplementation(libs.logback.classic)
        testImplementation(libs.junit.jupiter)
        testImplementation(libs.mockk)

        testRuntimeOnly(libs.junit.jupiter.engine)
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        classifier = 'sources'
    }

    task javadocJar(type: Jar) {
        from javadoc
        classifier = 'javadoc'
    }

    javadoc {
        if(JavaVersion.current().isJava9Compatible()) {
            options.addBooleanOption('html5', true)
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    test {
        useJUnitPlatform()
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifact javadocJar

                pom {
                    name = project.name
                    description = "Dynamic properties for your Java/Kotlin app"
                    url = 'http://github.com/pleo-io/prop'
                    licenses {
                        license {
                            name = 'MIT License'
                            url = 'http://www.opensource.org/licenses/mit-license.php'
                        }
                    }
                    developers {
                        developer {
                            name = 'Pleo'
                            email = 'dev@pleo.io'
                        }
                    }
                    scm {
                        connection = 'scm:git:git@github.com:pleo-io/prop.git'
                        developerConnection = 'scm:git:git@github.com:pleo-io/prop.git'
                        url = 'https://github.com/pleo-io/prop'
                    }
                }
            }
        }

        repositories {
            mavenLocal()
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/pleo-io/prop")
                credentials {
                    username = System.getenv("GITHUB_ACTOR")
                    password = System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
}
