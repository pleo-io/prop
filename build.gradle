buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.11.0"
    }
}


apply plugin: 'io.codearte.nexus-staging'

allprojects {
    apply plugin: 'maven'

    group = 'io.pleo'
    version = '1.2.1'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'signing'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenLocal()
        mavenCentral()

        maven { url "http://repo.maven.apache.org/maven2" }
    }

    dependencies {
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.20'
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile group: 'org.mockito', name: 'mockito-core', version: '2.6.8'
        testCompile group: 'com.google.truth', name: 'truth', version: '0.31'
        testCompile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task packageSources(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource

    }

    artifacts {
        archives javadocJar, packageSources
    }

    if (project.hasProperty("release")) {
        signing {
            sign configurations.archives
        }
    }

    // Until the 'maven-publish' plugin supports pom signing we're stuck with the old version
    // Signing the generated POM file generated by the Maven Publishing plugin is currently not supported. Future versions of Gradle might add this functionality.
    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: "${System.env.OSSRH_USER}", password: "${System.env.OSSRH_PASSWORD}")
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: "${System.env.OSSRH_USER}", password: "${System.env.OSSRH_PASSWORD}")
                }

                pom.project {
                    name project.name
                    description project.description
                    packaging 'jar'

                    url 'https://github.com/pleo-io/prop'

                    scm {
                        connection 'scm:git:git@github.com:pleo-io/prop.git'
                        developerConnection 'scm:git:git@github.com:pleo-io/prop.git'
                        url 'https://github.com/pleo-io/prop'
                    }

                    pom.project {
                        licenses {
                            license {
                                name 'MIT License'
                                url 'http://www.opensource.org/licenses/mit-license.php'
                            }
                        }
                    }

                    developers {
                        developer {
                            name 'Pleo'
                            email 'dev@pleo.io'
                        }
                    }
                }
            }
        }
    }
}

if (project.hasProperty("release")) {
    nexusStaging {
        username = "${System.env.OSSRH_USER}"
        password = "${System.env.OSSRH_PASSWORD}"
    }
}
